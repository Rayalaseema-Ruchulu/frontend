name: "Build & Release"
on:
  push:
    branches: ['main']

jobs: 
  build:
    name: Build & Release
    runs-on: ubuntu-latest
    steps:
      # Checkout Repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Setup Java for Android
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      # Setup flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with: 
          channel: stable

      # Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      # TODO: Add key signing for Android

      # Build APK for Android
      - name: Build APK
        run: flutter build apk --release --split-per-abi
          
      # Build App Bundle for Android
      - name: Build App Bundle
        run: flutter build appbundle --release

      # TODO: Build for iOS

      # Build for Web
      - name: Build for Web
        run: flutter build web --release --wasm
      
      - name: Compress web artifacts
        run: zip -r web.zip build/web/*

      - name: Extract version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "Extracted version: $VERSION"
          echo "PUB_VERSION=$VERSION" >> $GITHUB_ENV # Make it available as an environment variable
          echo "version=$VERSION" >> $GITHUB_OUTPUT # Make it available as an output for this step

      - name: Check if tag already exists
        id: check_tag
        run: |
          TAG_NAME="v${{ env.PUB_VERSION }}"
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists."
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag $TAG_NAME does not exist. Will create it."
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Git Tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          TAG_NAME="v${{ env.PUB_VERSION }}"
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$TAG_NAME" -m "Release $TAG_NAME"
          git push origin "$TAG_NAME"
          echo "Created and pushed tag $TAG_NAME"

      # Create release
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ env.PUB_VERSION }}"
          artifacts: "web.zip, build/app/outputs/flutter-apk/*.apk, build/app/outputs/bundle/release/*.aab"
          prerelease: true
          allowUpdates: true
          removeArtifacts: true
          generateReleaseNotes: true
          draft: false
